{"version":3,"sources":["Translate.js","App.js","reportWebVitals.js","index.js"],"names":["Translate","useState","options","setOptions","toLang","setToLang","fromLang","setFromLang","input","setInput","output","setOutput","params","URLSearchParams","append","translate","a","axios","post","headers","reqVar","console","log","data","translatedText","useEffect","getlang","get","fetchLang","resData","e","Fragment","className","style","htmlFor","onChange","target","value","id","map","opt","code","name","onInput","rows","defaultValue","disabled","type","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5d6fb89.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Translate = () => {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [toLang, setToLang] = useState(\"en\");\r\n    const [fromLang, setFromLang] = useState(\"en\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    const params = new URLSearchParams();\r\n    params.append('q', input);\r\n    params.append('source', fromLang);\r\n    params.append('target', toLang);\r\n    params.append('api_key', 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx');\r\n\r\n    const translate = async () => {\r\n        try {\r\n            const reqVar = await axios.post('https://libretranslate.de/translate', params, {\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }\r\n            });\r\n\r\n            console.log(reqVar);\r\n            setOutput(reqVar.data.translatedText);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let getlang = async () => {\r\n                let fetchLang = await axios.get('https://libretranslate.de/languages', { headers: { \"Content-Type\": \"application/json\" } });\r\n                let resData = fetchLang.data;\r\n                setOptions(resData);\r\n            }\r\n\r\n            getlang();\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"TranslateAPiMain container\" style={{ 'maxWidth': '1000px', 'margin': '0 auto' }}>\r\n\r\n                <h2 className=\"text-center m-3\">Translate Text</h2>\r\n                <div className=\"row d-flex\">\r\n                    <div className=\"col-md-5 m-3\">\r\n                        <label className=\"input-group-text mb-2\" htmlFor=\"inputGroupSelect02\">From </label>\r\n                        <select onChange={e => setFromLang(e.target.value)} className=\"form-select\" id=\"inputGroupSelect02\">\r\n                            {options.map(opt => <option key={opt.code} value={opt.code}>{opt.name}</option>\r\n                            )}\r\n\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-5 m-3\">\r\n                        <label className=\"input-group-text mb-2\" htmlFor=\"inputGroupSelect02\">To </label>\r\n                        <select onChange={e => setToLang(e.target.value)} className=\"form-select\" id=\"inputGroupSelect02\">\r\n                            {options.map(opt => <option key={opt.code} value={opt.code}>{opt.name}</option>\r\n                            )}\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row d-flex\">\r\n                    <div className=\"col-md-5 m-3\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Enter Text</label>\r\n                        <textarea onInput={e => setInput(e.target.value)} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5 m-3\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Translation</label>\r\n                        <textarea defaultValue={output} className=\"form-control\" id=\"exampleFormControlTextarea1\" disabled rows=\"8\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container row d-flex justify-content-center\">\r\n                    <button type=\"button\" onClick={translate} className=\"checkBtn btn-outline-warning \">Check</button>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Translate\r\n","import React from 'react'\nimport Translate from './Translate'\nimport './App.css';\n\nconst App = () => {\n    return (\n        <React.Fragment>\n            <Translate />\n        </React.Fragment>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}